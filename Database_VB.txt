Option Compare Database

Private Sub cmdImportCFSData_Click()
On Error GoTo Err_cmdImportCFSData_Click
    Dim query As String
    Dim stFiscal As String
    Dim stCFS_Data As String
    Dim stSource As String
    Dim wsOld As Worksheet
    Dim wsNew As Worksheet
    Dim wbOld As Workbook
    Dim months(1 To 12) As String
        months(1) = "Jan"
        months(2) = "Feb"
        months(3) = "Mar"
        months(4) = "Apr"
        months(5) = "May"
        months(6) = "Jun"
        months(7) = "Jul"
        months(8) = "Aug"
        months(9) = "Sep"
        months(10) = "Oct"
        months(11) = "Nov"
        months(12) = "Dec"
    
    stCFS_Data = "CFS_Data"
    
    ' Delete current fiscal
    stFiscal = InputBox("Please input 2-digits fiscal year for deletion.", "Delete current fiscal data")
    query = "DELETE CFS.[Period Name]" & vbCrLf & _
            "FROM " & stCFS_Data & " CFS" & vbCrLf & _
            "WHERE ((CFS.[Period Name]) Like '*-" & stFiscal & "');"
    DoCmd.RunSQL query

    ' Get source file
     filePicker stSource, FILE_FORMAT_ALL, "Select CFS Data File"



    ' Sets workbook and worksheet variables.
    ' Implemented in Mar 2023, after changes to CFS data export.
    ' Columns must be rearanged and deleted
    Set wbOld = Workbooks.Open(stSource)
    Set wsOld = wbOld.Worksheets(1)
    Set wbNew = Workbooks.Add
    Set wsNew = wbNew.Sheets.Add

    ' Copy columns. Hard coded for the STF Data import
     wsOld.Columns("A").Copy wsNew.Columns("A")
     wsOld.Columns("AA").Copy wsNew.Columns("B")
     wsOld.Columns("E").Copy wsNew.Columns("C")
     wsOld.Columns("B").Copy wsNew.Columns("D")
     wsOld.Columns("C").Copy wsNew.Columns("E")
     wsOld.Columns("D").Copy wsNew.Columns("F")
     wsOld.Columns("AD").Copy wsNew.Columns("G")
     wsOld.Columns("O").Copy wsNew.Columns("H")
     wsOld.Columns("E").Copy wsNew.Columns("C")
     wsOld.Columns("I").Copy wsNew.Columns("I")
     wsOld.Columns("AE").Copy wsNew.Columns("J")
     wsOld.Columns("P").Copy wsNew.Columns("K")
     wsOld.Columns("G").Copy wsNew.Columns("L")
    
    ' Closes original workbook and resets variables to free memory and allow proper saving
    wbOld.Close
    Set wsOld = Nothing
    Set wbOld = Nothing
    
    ' Saves and closes new workbook/sheet.
    ' !CAUTION! Saves over original file. Using this method to reduce redundant copies of data.
    ' If an original copy of CFS data is necessary, this should be run on a copy of that data.
    wsNew.SaveAs stSource, xlCSV
    wbNew.Close
    Set wbNew = Nothing
    Set wsNew = Nothing


     ' Replace CRLF with LF
     ' Saving with excel causes a vbCrLF to be used, but the import needs a vbLF
    ReplaceWith stSource, vbCrLf, vbLf

     ' Replaces commas with tabs (vbTab)
     ' Import needs the file to be tab deliminated, but the xlCSV saves as comma deliminated.
     ' !CAUTION! This could cause issues later on OR if this code is repurposed.
     ' Cont: If any commas are in the data (don't do this please) they will be repalced with tabs
     ' Cont: This woudl likely be found in a Comments field or similar. Currently, no commas are found in the data
    ReplaceWith stSource, ",", vbTab

     'Last change made to file
     'The new export ahs a change to the months column, so we need to swap the order from YY-Mon to Mon-YY
     ' StFiscal is the user inputted fiscal, and will be used for the date.
     ' This could also be done using excel functions, but I found that to be VERY slow.
     ' Because this column data has a unique format, and isn't replciated anywhere else in the file
     ' Cont: we can jsut use a find replace iterating through all the months.
    For i = 1 To 12
        ReplaceWith stSource, stFiscal & "-" & months(i), months(i) & "-" & stFiscal
    Next i
 

    ' Insert records
    importCFSData stCFS_Data, stSource

    ' Compact DB
    CompactDB "F:\!shared_root\11_Apps\References\Source\test_area\HistoricData_Test.accdb" ' This will change / must change in prod to test to a development area. Set to TEST
Exit_cmdImportCFSData_Click:
  MsgBox ("Done importing CFS Data!") 'Added this to give user a headsup that the sub is finished, as it can take a while.
    Exit Sub
Err_cmdImportCFSData_Click:
    MsgBox Err.Number & ": " & Err.Description, vbCritical, "Import CFS Data"
End Sub


