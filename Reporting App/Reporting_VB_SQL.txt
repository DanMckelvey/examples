Private Function getqWriteOffVolume(stTSO_Code As String) As String
    Dim stFields As String
    Dim stTables As String
    Dim stConditions As String
    
    stFields = "SELECT DISTINCT B.TSO_CODE, L.FIELD_TEAM, L.NAV_NAME," & _
        "B.OPAR_OPERATING_AREA_NAME AS OperatingArea, B.CUTB_LOCATION AS Location, L.TENURE, L.LICENCE_ID, L.LICN_LICENCE_STATE AS Licence_State, B.PERMIT_ID, B.BLOCK_ID, B.UBI, B.CUTB_BLOCK_STATE AS Block_State, B.CRUISE_VOL, B.BLAL_RW_VOL AS RW_VOL, A_D.Write_Off_D, A_D.Write_Off_Status," & vbCrLf
    stFields = stFields & "Extract(Year From Add_Months(A_D.Write_Off_D, 9)) AS Write_Off_Fiscal," & vbCrLf & _
        "   'Q' || Ceil((EXTRACT(Month From Add_Months(A_D.Write_Off_D, -3)))/3) AS Write_Off_Quarter," & vbCrLf & _
        "    CASE WHEN A_D.Write_Off_D IS NULL THEN 'No_Fiscal'" & vbCrLf & _
        "         WHEN Extract(Year From Add_Months(A_D.Write_Off_D, 9)) < A_D.Current_Fiscal" & vbCrLf & _
        "           THEN 'Past_Fiscal'" & vbCrLf & _
        "         WHEN Extract(Year From Add_Months(A_D.Write_Off_D, 9)) = A_D.Current_Fiscal" & vbCrLf & _
        "              THEN 'Current_Fiscal'" & vbCrLf & _
        "         ELSE 'Future_Fiscal'" & vbCrLf & _
        "         END AS Fiscal_Category," & vbCrLf & _
        "   A_D.RC_D, A_D.RC_Status, A_D.DR_D, A_D.DR_Status, A_D.DVS_D, A_D.DVS_Status, A_D.DVC_D, A_D.DVC_Status, LA.HI_Date, LA.HI_Status," & vbCrLf
    stFields = stFields & " CASE WHEN LA.HI_Status = 'D' THEN 'Licence Issued'" & vbCrLf & _
        "        WHEN A_D.DVC_Status = 'D' THEN 'Development Complete'" & vbCrLf & _
        "        WHEN A_D.DVS_Status = 'D' THEN 'Development Started and Development Not Completed'" & vbCrLf & _
        "        WHEN A_D.DR_Status = 'D' THEN 'Developement Ready and Development Not Started'" & vbCrLf & _
        "        ELSE 'Pre Developement Ready' END AS Block_Stage," & vbCrLf & _
        "   BS.SPATIAL_FLAG," & vbCrLf & _
        "   B.CUTB_SEQ_NBR" & vbCrLf
    stTables = "FROM" & vbCrLf & " FORESTVIEW.V_BLOCK B," & vbCrLf & _
        "   FORESTVIEW.V_BLOCK_SPATIAL BS," & vbCrLf & _
        "   FORESTVIEW.V_LICENCE L," & vbCrLf
    stTables = stTables & " (" & vbCrLf & "SELECT" & vbCrLf & "A0.CUTB_SEQ_NBR," & vbCrLf & "Extract(" & vbCrLf & _
        "        Year From ADD_MONTHS(" & vbCrLf & "Case" & vbCrLf & _
        "                WHEN CURRENT_DATE < TO_DATE('" & getToDateInString() & "', 'YYYY-MM-DD')" & vbCrLf & "THEN CURRENT_DATE" & vbCrLf & _
        "                ELSE TO_DATE('" & getToDateInString() & "', 'YYYY-MM-DD')" & vbCrLf & " END," & vbCrLf & _
        "    9)) AS Current_Fiscal," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DVC', A0.ACTIVITY_DATE, Null)) AS DVC_D," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DVC', A0.ACTI_STATUS_IND, Null)) AS DVC_Status," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DVS', A0.ACTIVITY_DATE, Null)) AS DVS_D," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DVS', A0.ACTI_STATUS_IND, Null)) AS DVS_Status," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'RC', A0.ACTIVITY_DATE, Null)) AS RC_D," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'RC', A0.ACTI_STATUS_IND, Null)) AS RC_Status," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DR', A0.ACTIVITY_DATE, Null)) AS DR_D," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'DR', A0.ACTI_STATUS_IND, Null)) AS DR_Status," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'WO', A0.ACTIVITY_DATE, Null)) AS Write_Off_D," & vbCrLf & _
        "    MAX(DECODE(A0.ACTT_KEY_IND, 'WO', A0.ACTI_STATUS_IND, Null)) AS Write_Off_Status" & vbCrLf & _
        "    FROM  FORESTVIEW.V_BLOCK_ACTIVITY_ALL A0" & vbCrLf & "   WHERE A0.ACTIVITY_CLASS = 'CMB'" & vbCrLf & _
        "    AND A0.ACTT_KEY_IND In ('DVC', 'DVS', 'RC', 'DR', 'WO')" & vbCrLf & "   GROUP BY A0.CUTB_SEQ_NBR" & vbCrLf & "ORDER BY" & vbCrLf & " A0.CUTB_SEQ_NBR) A_D," & vbCrLf
    stTables = stTables & " (SELECT" & vbCrLf & _
        "              A3.LICN_SEQ_NBR, A3.ACTI_STATUS_IND AS HI_Status, A3.ACTIVITY_DATE AS HI_Date" & vbCrLf & _
        "        FROM FORESTVIEW.V_LICENCE_ACTIVITY_ALL A3" & vbCrLf & _
        "        WHERE A3.ACTIVITY_CLASS = 'CML' AND A3.ACTT_KEY_IND = 'HI') LA" & vbCrLf
    stConditions = "B.CUTB_SEQ_NBR = A_D.CUTB_SEQ_NBR AND B.CUTB_SEQ_NBR = BS.CUTB_SEQ_NBR (+) AND B.LICN_SEQ_NBR = L.LICN_SEQ_NBR (+) AND B.LICN_SEQ_NBR = LA.LICN_SEQ_NBR (+) AND A_D.Write_Off_Status = 'D' AND A_D.Write_Off_D Between TO_DATE('" & getFromDateInString() & "', 'YYYY-MM-DD') And TO_DATE('" & getToDateInString() & "', 'YYYY-MM-DD')" & vbCrLf
    stConditions = joinfilters(stConditions, Array("AND", getFilterTSO("B.TSO_CODE", stTSO_Code)), Array("AND", joinfilters(getFilterList(Me.lstNav_Name, "L.NAV_NAME"), Array("OR", getFilterList(Me.lstTeam, "L.FIELD_TEAM")))))
    getqWriteOffVolume = stFields & stTables & "WHERE " & stConditions & vbCrLf & "ORDER BY B.TSO_CODE, L.FIELD_TEAM, L.NAV_NAME, L.LICENCE_ID, B.PERMIT_ID, B.BLOCK_ID"
End Function